1번
2의 보수방법에 의한 연산 과정의 설명 (예를 들어, 5비트의 (-7)+5을 2의 보수방법연산)
맨 앞비트는 부호비트 (0 은 +,1은 -)
뺴는 수(음수)를 2의 보수 취한다. -7 = 00111(2) ->11001=-7에 2의보수
둘을 가산한다.
11001 + 00101 = 11110
비트 부호를 제외한 1110에 또 2의 보수를 취한다.
0010 에 비트 부호를 더하면 10010 == 10진수 -2
2번
답 나와있음
3번 명령어 처리 사이클은
호출-해석-실행이다.
프로세서는 PC 레지스터의 값에 해당하는 주기억장치의 주소에 가 IR 레지스터에 옮겨놓는다.(호출)
레지스터 IR로 가져온 기계어 비트열을 해석한다.(해석)
IR의 비트열에 해당하는 신호를 ALU,범용 레지스터, 주기억장치에 보내 기계어 명령어를 수행한다.(실행)
완료시 다시 호출사이클 수행한다.
4번 
폰노이만의 저장 프로그램 개념에 대한 설명
프로그램을 통해 CPU의 회로를 다시 구성하는 어려움을 해결할 수 있게한 개념이다.
프로그램은 데이터와 마찬가지로 주기억장치에 저장되었다가 프로세서로 가져와 명령어를 해석하여 프로세서가 처리하는 과정을 거치게 된 컴퓨터 시스템이다.
5번
프로세서 구성요소에 대한 설명
프로세서(CPU)는 산술논리연산장치 ALU, 매우 빠른 속도의 기억장치인 레지스터, 컴퓨터를 제어하는 제어장치로 구성되어있다.
6번
운영체제의 발전 과정에 나타난 5가지 처리방식에 대한 설명
배치 프로세싱 - 주기억장치에 도착한 순으로 순차적으로 하나씩 실행하는 방식
상호대화식 프로세싱 - 모니터를 통하여 프로그램 실행 도중 데이터 제공하거나 프로그램을 제어하거나 중간결과를 확인 할 수 있다.
시분할 시스템 - CPU가 하나인 PC에서 한순간에는 하나의 작업만이 실행 가능하므로 여러 개의 작업을 시간 분할하여 순서대로 돌아가며 실행하는 시분할 기법을 적용한다.
병렬 처리 - 하나의 프로그램을 여러개의 CPU에 할당하여 빠르게 하는 기술
실시간 처리 - 컴퓨터로 하여금 정해진 짧은 시간 내에 작업의 처리를 완료하게 하고 싶은 경우 실시간 운영체제는 실시간에 작업을 완료하게 해준다.
7번 
데드록이란 무엇이며 발생조건을 설명하여라.
프로세스 A가 자원1을 점유하고 프로세스 B가 자원2를 점유한 상황이 지속되면 원하는 작업을 진행할 수 없게 된다. 이 상황을 데드록이라고 한다.
데드록이 발생하려면 공유 할 수 없는 자원에 관한 경쟁이 존재하고,
		  필요한 자원을 한꺼번에 점유하지 않고 하나씩 점유한다. 점유한 자원은 필요한 자원을 모두 차지할 때까지 놓아주지 않는다.
		  자원이 프로세스에 의해 점유된 후에는 강제로 빼앗을 수 없다.
8번
프로그래밍 언어에서 매개변수 값전달 방식을 설명하여라.
값에 의한 호출 	호출하는 프로그램에서 호출 당하는 프로시저로 한번 실 매개변수 값을 전달하는 방법
참조에 의한 호출	매개변수가 저장되어 있는 값이 아닌 메모리 주소를 대신 전달한다.
9번 
소프트웨어 테스팅 방법에 대하여 설명
유리박스 테스팅 - 전체 소프트웨어에서 중요하고 문제 소지 있는 모듈을 중심으로 테스트하는 기법이다.
블랙박스 테스팅 - 소프트웨어를 블랙박스로 생각하고 모든 데이터 세트를 사용해 소프트웨어의 작동을 검증한다.
	           알파 테스팅은 개발팀 내부에서 블랙박스 테스팅하는 것이고
	           베타 테스팅은 앞으로 예상되는 외부 사용자들에게 검증하는 것
10번
스택과 큐에 대한 이해
스택은 top bottom이 존재하고 새로운 항목을 스택에 삽입할 경우 맨 위에 쌓는다.(Last In First Out)법칙
항목을 가져갈 때도 맨 위 항목을 가져간다.
큐는 새로 들어온 항목이 맨 뒤에 쌓아진다.(First in First out)법칙
11번
노드 A와 노드 B가 연결된 리스트 구조에서 새로운 노드 S를 삽입하는 알고리즘을 기술
S.link = A.link
A.link = Addr(S)
12번 
정렬방식중 버블, 삽입, 합병 및 퀵 정렬을 설명하여라.
버블정렬은 이웃하는 숫자를 비교하여 큰수나 작은수를 오른쪽으로 이동시켜나가는 알고리즘이다.
삽입정렬은 정렬 된 왼쪽 부분과 정렬 안 된 오른쪽 부분을 나누고 오른쪽 부분의 맨 왼쪽 요소를 정렬 된 부분의 적절한 위치에 삽입하는 절차를 정렬이 안된 요소가 사라질 떄 까지 반복한다.
합병정렬은 데이터 수가 N일 때 1/2N으로 분할하여 정렬하는 알고리즘이다. 이를 정렬하기 위해 분할된 1/2N 데이터를 또 1/2N로 나누는 재귀적인 반복한다.
퀵정렬은 피봇이라는 중심요소를 정한후 피봇을 중심으로 작은수와 큰수로 나누는 과정을 재귀적으로 반복하는 알고리즘이다.
